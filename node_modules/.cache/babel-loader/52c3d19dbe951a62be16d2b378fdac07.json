{"ast":null,"code":"export default class SwapiService {\n  constructor() {\n    this._apiBase = 'https://swapi.co/api';\n\n    this.getResource = async url => {\n      const res = await fetch(`${this._apiBase}${url}`);\n\n      if (!res.ok) {\n        throw new Error(`Could not fetch ${url}` + `, received ${res.status}`);\n      }\n\n      return await res.json();\n    };\n\n    this.getAllPeople = async () => {\n      const res = await this.getResource(`/people/`);\n      return res.results.map(this._transformPerson);\n    };\n\n    this.getPerson = async id => {\n      const person = await this.getResource(`/people/${id}/`);\n      return this._transformPerson(person);\n    };\n\n    this.getAllPlanets = async () => {\n      const res = await this.getResource(`/planets/`);\n      return res.results.map(this._transformPlanet);\n    };\n\n    this.getPlanet = async id => {\n      const planet = await this.getResource(`/planets/${id}/`);\n      return this._transformPlanet(planet);\n    };\n\n    this.getAllStarships = async () => {\n      const res = await this.getResource(`/starships/`);\n      return res.results.map(this._transformStarship);\n    };\n\n    this.getStarship = async id => {\n      const starship = this.getResource(`/starships/${id}/`);\n      return this._transformStarship(starship);\n    };\n\n    this._extractId = item => {\n      const idRegExp = /\\/([0-9]*)\\/$/;\n      return item.url.match(idRegExp)[1];\n    };\n\n    this._transformPlanet = planet => {\n      return {\n        id: this._extractId(planet),\n        name: planet.name,\n        population: planet.population,\n        rotationPeriod: planet.rotation_period,\n        diameter: planet.diameter\n      };\n    };\n\n    this._transformStarship = starship => {\n      return {\n        id: this._extractId(starship),\n        name: starship.name,\n        model: starship.model,\n        manufacturer: starship.manufacturer,\n        costInCredits: starship.cost_in_credits,\n        length: starship.length,\n        crew: starship.crew,\n        passengers: starship.passengers,\n        cargoCapacity: starship.cargo_capacity\n      };\n    };\n\n    this._transformPerson = person => {\n      return {\n        id: this._extractId(person),\n        name: person.name,\n        gender: person.gender,\n        birthYear: person.birth_year,\n        eyeColor: person.eye_color\n      };\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/deniscrish/Documents/react-apps/star-db/src/services/swapi-service.js"],"names":["SwapiService","_apiBase","getResource","url","res","fetch","ok","Error","status","json","getAllPeople","results","map","_transformPerson","getPerson","id","person","getAllPlanets","_transformPlanet","getPlanet","planet","getAllStarships","_transformStarship","getStarship","starship","_extractId","item","idRegExp","match","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","cost_in_credits","length","crew","passengers","cargoCapacity","cargo_capacity","gender","birthYear","birth_year","eyeColor","eye_color"],"mappings":"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","sourcesContent":["export default class SwapiService {\n\n    _apiBase = 'https://swapi.co/api';\n\n    getResource = async (url) => {\n        const res = await fetch(`${this._apiBase}${url}`);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}` +\n                `, received ${res.status}`)\n        }\n        return await res.json();\n    };\n\n    getAllPeople = async () => {\n        const res = await this.getResource(`/people/`);\n        return res.results.map(this._transformPerson);\n    };\n\n    getPerson = async (id) => {\n        const person = await this.getResource(`/people/${id}/`);\n        return this._transformPerson(person);\n    };\n\n    getAllPlanets = async () => {\n        const res = await this.getResource(`/planets/`);\n        return res.results.map(this._transformPlanet);\n    };\n\n    getPlanet = async (id) => {\n        const planet = await this.getResource(`/planets/${id}/`);\n        return this._transformPlanet(planet);\n    };\n\n    getAllStarships = async () => {\n        const res = await this.getResource(`/starships/`);\n        return res.results.map(this._transformStarship);\n    };\n\n    getStarship = async (id) => {\n        const starship = this.getResource(`/starships/${id}/`);\n        return this._transformStarship(starship);\n    };\n\n    _extractId = (item) => {\n        const idRegExp = /\\/([0-9]*)\\/$/;\n        return item.url.match(idRegExp)[1];\n    };\n\n    _transformPlanet = (planet) => {\n        return {\n            id: this._extractId(planet),\n            name: planet.name,\n            population: planet.population,\n            rotationPeriod: planet.rotation_period,\n            diameter: planet.diameter\n        };\n    };\n\n    _transformStarship = (starship) => {\n        return {\n            id: this._extractId(starship),\n            name: starship.name,\n            model: starship.model,\n            manufacturer: starship.manufacturer,\n            costInCredits: starship.cost_in_credits,\n            length: starship.length,\n            crew: starship.crew,\n            passengers: starship.passengers,\n            cargoCapacity: starship.cargo_capacity\n        }\n    };\n\n    _transformPerson = (person) => {\n        return {\n            id: this._extractId(person),\n            name: person.name,\n            gender: person.gender,\n            birthYear: person.birth_year,\n            eyeColor: person.eye_color\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}