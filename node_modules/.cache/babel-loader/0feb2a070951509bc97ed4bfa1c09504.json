{"ast":null,"code":"var _jsxFileName = \"/Users/deniscrish/Documents/react-apps/star-db/src/components/sw-components/item-lists.js\";\nimport React from 'react';\nimport ItemList from '../item-list';\nimport { withData, withSwapiService, withChildFunction, compose } from '../hoc-helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst renderName = _ref => {\n  let {\n    name\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 34\n  }, this);\n};\n\nconst renderModelAndName = _ref2 => {\n  let {\n    model,\n    name\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [name, \" (\", model, \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 49\n  }, this);\n};\n\nconst mapPersonMethodsToProps = swapiService => {\n  return {\n    getData: swapiService.getAllPeople\n  };\n};\n\nconst mapPlanetMethodsToProps = swapiService => {\n  return {\n    getData: swapiService.getAllPlanets\n  };\n};\n\nconst mapStarshipMethodsToProps = swapiService => {\n  return {\n    getData: swapiService.getAllStarships\n  };\n};\n\nconst PersonList = compose(withSwapiService(mapPersonMethodsToProps), withData, withChildFunction(renderName))(ItemList);\nconst PlanetList = compose(withSwapiService(mapPlanetMethodsToProps), withData, withChildFunction(renderName))(ItemList);\nconst StarshipList = compose(withSwapiService(mapStarshipMethodsToProps), withData, withChildFunction(renderModelAndName))(ItemList);\nexport { PersonList, PlanetList, StarshipList };","map":{"version":3,"sources":["/Users/deniscrish/Documents/react-apps/star-db/src/components/sw-components/item-lists.js"],"names":["React","ItemList","withData","withSwapiService","withChildFunction","compose","renderName","name","renderModelAndName","model","mapPersonMethodsToProps","swapiService","getData","getAllPeople","mapPlanetMethodsToProps","getAllPlanets","mapStarshipMethodsToProps","getAllStarships","PersonList","PlanetList","StarshipList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,SACIC,QADJ,EAEIC,gBAFJ,EAGIC,iBAHJ,EAIIC,OAJJ,QAKO,gBALP;;;AAOA,MAAMC,UAAU,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,sBAAc;AAAA,cAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,UAAd;AAAA,CAAnB;;AAEA,MAAMC,kBAAkB,GAAG;AAAA,MAAC;AAAEC,IAAAA,KAAF;AAASF,IAAAA;AAAT,GAAD;AAAA,sBAAqB;AAAA,eAAOA,IAAP,QAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA,UAArB;AAAA,CAA3B;;AAEA,MAAMC,uBAAuB,GAAIC,YAAD,IAAkB;AAC9C,SAAO;AACHC,IAAAA,OAAO,EAAED,YAAY,CAACE;AADnB,GAAP;AAGH,CAJD;;AAMA,MAAMC,uBAAuB,GAAIH,YAAD,IAAkB;AAC9C,SAAO;AACHC,IAAAA,OAAO,EAAED,YAAY,CAACI;AADnB,GAAP;AAGH,CAJD;;AAMA,MAAMC,yBAAyB,GAAIL,YAAD,IAAkB;AAChD,SAAO;AACHC,IAAAA,OAAO,EAAED,YAAY,CAACM;AADnB,GAAP;AAGH,CAJD;;AAMA,MAAMC,UAAU,GAAGb,OAAO,CACtBF,gBAAgB,CAACO,uBAAD,CADM,EAEtBR,QAFsB,EAGtBE,iBAAiB,CAACE,UAAD,CAHK,CAAP,CAIjBL,QAJiB,CAAnB;AAMA,MAAMkB,UAAU,GAAGd,OAAO,CACtBF,gBAAgB,CAACW,uBAAD,CADM,EAEtBZ,QAFsB,EAGtBE,iBAAiB,CAACE,UAAD,CAHK,CAAP,CAIjBL,QAJiB,CAAnB;AAMA,MAAMmB,YAAY,GAAGf,OAAO,CACxBF,gBAAgB,CAACa,yBAAD,CADQ,EAExBd,QAFwB,EAGxBE,iBAAiB,CAACI,kBAAD,CAHO,CAAP,CAInBP,QAJmB,CAArB;AAMA,SACIiB,UADJ,EAEIC,UAFJ,EAGIC,YAHJ","sourcesContent":["import React from 'react';\nimport ItemList from '../item-list';\nimport {\n    withData,\n    withSwapiService,\n    withChildFunction,\n    compose\n} from '../hoc-helpers';\n\nconst renderName = ({ name }) => <span>{name}</span>;\n\nconst renderModelAndName = ({ model, name }) => <span>{name} ({model})</span>;\n\nconst mapPersonMethodsToProps = (swapiService) => {\n    return {\n        getData: swapiService.getAllPeople\n    };\n};\n\nconst mapPlanetMethodsToProps = (swapiService) => {\n    return {\n        getData: swapiService.getAllPlanets\n    };\n};\n\nconst mapStarshipMethodsToProps = (swapiService) => {\n    return {\n        getData: swapiService.getAllStarships\n    };\n};\n\nconst PersonList = compose(\n    withSwapiService(mapPersonMethodsToProps),\n    withData,\n    withChildFunction(renderName)\n)(ItemList);\n\nconst PlanetList = compose(\n    withSwapiService(mapPlanetMethodsToProps),\n    withData,\n    withChildFunction(renderName)\n)(ItemList);\n\nconst StarshipList = compose(\n    withSwapiService(mapStarshipMethodsToProps),\n    withData,\n    withChildFunction(renderModelAndName)\n)(ItemList);\n\nexport {\n    PersonList,\n    PlanetList,\n    StarshipList\n};"]},"metadata":{},"sourceType":"module"}