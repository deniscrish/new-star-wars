{"ast":null,"code":"var _jsxFileName = \"/Users/deniscrish/Documents/react-apps/star-wars/src/components/app/app.js\";\nimport React, { Component } from 'react';\nimport Header from '../header';\nimport RandomPlanet from '../random-planet';\nimport ErrorBoundry from '../error-boundry';\nimport SwapiService from '../../services/swapi-service';\nimport DummySwapiService from '../../services/dummy-swapi-service';\nimport { PeoplePage, PlanetsPage, StarshipsPage, LoginPage, SecretPage } from '../pages';\nimport { SwapiServiceProvider } from '../swapi-service-context';\nimport './app.css';\nimport { BrowserRouter as Router, Routes, Route, Redirect } from 'react-router-dom';\nimport StarshipDetails from '../sw-components/starship-details';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      swapiService: new SwapiService(),\n      isLoggedIn: false\n    };\n\n    this.onLogin = () => {\n      this.setState({\n        isLoggedIn: true\n      });\n    };\n\n    this.onServiceChange = () => {\n      this.setState(_ref => {\n        let {\n          swapiService\n        } = _ref;\n        const Service = swapiService instanceof SwapiService ? DummySwapiService : SwapiService;\n        return {\n          swapiService: new Service()\n        };\n      });\n    };\n  }\n\n  render() {\n    const {\n      isLoggedIn\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(ErrorBoundry, {\n      children: /*#__PURE__*/_jsxDEV(SwapiServiceProvider, {\n        value: this.state.swapiService,\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stardb-app\",\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              onServiceChange: this.onServiceChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RandomPlanet, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Routes, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: \"/\",\n                render: () => /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Welcome to StarDB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 33\n                }, this),\n                exact: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/people/:id?\",\n                component: PeoplePage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/planets\",\n                component: PlanetsPage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/starships\",\n                exact: true,\n                component: StarshipsPage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/starships/:id\",\n                render: _ref2 => {\n                  let {\n                    match\n                  } = _ref2;\n                  const {\n                    id\n                  } = match.params;\n                  return /*#__PURE__*/_jsxDEV(StarshipDetails, {\n                    itemId: id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 28\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/login\",\n                render: () => /*#__PURE__*/_jsxDEV(LoginPage, {\n                  isLoggedIn: isLoggedIn,\n                  onLogin: this.onLogin\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/secret\",\n                render: () => /*#__PURE__*/_jsxDEV(SecretPage, {\n                  isLoggedIn: isLoggedIn\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                render: () => /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Page not found\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/deniscrish/Documents/react-apps/star-wars/src/components/app/app.js"],"names":["React","Component","Header","RandomPlanet","ErrorBoundry","SwapiService","DummySwapiService","PeoplePage","PlanetsPage","StarshipsPage","LoginPage","SecretPage","SwapiServiceProvider","BrowserRouter","Router","Routes","Route","Redirect","StarshipDetails","App","state","swapiService","isLoggedIn","onLogin","setState","onServiceChange","Service","render","match","id","params"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AAEA,SACEC,UADF,EAEEC,WAFF,EAGEC,aAHF,EAIEC,SAJF,EAKEC,UALF,QAMO,UANP;AAQA,SAASC,oBAAT,QAAqC,0BAArC;AAEA,OAAO,WAAP;AAEA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,QAAjD,QAAiE,kBAAjE;AACA,OAAOC,eAAP,MAA4B,mCAA5B;;AAEA,eAAe,MAAMC,GAAN,SAAkBlB,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAEzCmB,KAFyC,GAEjC;AACNC,MAAAA,YAAY,EAAE,IAAIhB,YAAJ,EADR;AAENiB,MAAAA,UAAU,EAAE;AAFN,KAFiC;;AAAA,SAOzCC,OAPyC,GAO/B,MAAM;AACd,WAAKC,QAAL,CAAc;AACZF,QAAAA,UAAU,EAAE;AADA,OAAd;AAGD,KAXwC;;AAAA,SAazCG,eAbyC,GAavB,MAAM;AACtB,WAAKD,QAAL,CAAc,QAAsB;AAAA,YAArB;AAAEH,UAAAA;AAAF,SAAqB;AAClC,cAAMK,OAAO,GAAGL,YAAY,YAAYhB,YAAxB,GACdC,iBADc,GACMD,YADtB;AAEA,eAAO;AACLgB,UAAAA,YAAY,EAAE,IAAIK,OAAJ;AADT,SAAP;AAGD,OAND;AAOD,KArBwC;AAAA;;AAuBzCC,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEL,MAAAA;AAAF,QAAiB,KAAKF,KAA5B;AAEA,wBACE,QAAC,YAAD;AAAA,6BACE,QAAC,oBAAD;AAAsB,QAAA,KAAK,EAAE,KAAKA,KAAL,CAAWC,YAAxC;AAAA,+BACE,QAAC,MAAD;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,eAAe,EAAE,KAAKI;AAA9B;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,oBAFF,eAIE,QAAC,MAAD;AAAA,sCACE,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,GAAZ;AACE,gBAAA,MAAM,EAAE,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADhB;AAEE,gBAAA,KAAK;AAFP;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,cAAZ;AAA2B,gBAAA,SAAS,EAAElB;AAAtC;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,UAAZ;AAAuB,gBAAA,SAAS,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,sBALF,eAME,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,YAAZ;AAAyB,gBAAA,KAAK,MAA9B;AAA+B,gBAAA,SAAS,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA,sBANF,eAOE,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,gBAAZ;AACE,gBAAA,MAAM,EAAE,SAAe;AAAA,sBAAd;AAAEmB,oBAAAA;AAAF,mBAAc;AACrB,wBAAM;AAAEC,oBAAAA;AAAF,sBAASD,KAAK,CAACE,MAArB;AACA,sCAAO,QAAC,eAAD;AAAiB,oBAAA,MAAM,EAAED;AAAzB;AAAA;AAAA;AAAA;AAAA,0BAAP;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,sBAPF,eAaE,QAAC,KAAD;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,MAAM,EAAE,mBACN,QAAC,SAAD;AACE,kBAAA,UAAU,EAAEP,UADd;AAEE,kBAAA,OAAO,EAAE,KAAKC;AAFhB;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,sBAbF,eAqBE,QAAC,KAAD;AACE,gBAAA,IAAI,EAAC,SADP;AAEE,gBAAA,MAAM,EAAE,mBACN,QAAC,UAAD;AAAY,kBAAA,UAAU,EAAED;AAAxB;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,sBArBF,eA2BE,QAAC,KAAD;AAAO,gBAAA,MAAM,EAAE,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;AAAA;AAAA;AAAA,sBA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA2CD;;AAtEwC","sourcesContent":["import React, { Component } from 'react';\n\nimport Header from '../header';\nimport RandomPlanet from '../random-planet';\nimport ErrorBoundry from '../error-boundry';\nimport SwapiService from '../../services/swapi-service';\nimport DummySwapiService from '../../services/dummy-swapi-service';\n\nimport {\n  PeoplePage,\n  PlanetsPage,\n  StarshipsPage,\n  LoginPage,\n  SecretPage\n} from '../pages';\n\nimport { SwapiServiceProvider } from '../swapi-service-context';\n\nimport './app.css';\n\nimport { BrowserRouter as Router, Routes, Route, Redirect } from 'react-router-dom';\nimport StarshipDetails from '../sw-components/starship-details';\n\nexport default class App extends Component {\n\n  state = {\n    swapiService: new SwapiService(),\n    isLoggedIn: false\n  };\n\n  onLogin = () => {\n    this.setState({\n      isLoggedIn: true\n    });\n  };\n\n  onServiceChange = () => {\n    this.setState(({ swapiService }) => {\n      const Service = swapiService instanceof SwapiService ?\n        DummySwapiService : SwapiService;\n      return {\n        swapiService: new Service()\n      };\n    });\n  };\n\n  render() {\n\n    const { isLoggedIn } = this.state;\n\n    return (\n      <ErrorBoundry>\n        <SwapiServiceProvider value={this.state.swapiService} >\n          <Router>\n            <div className=\"stardb-app\">\n              <Header onServiceChange={this.onServiceChange} />\n              <RandomPlanet />\n\n              <Routes>\n                <Route path=\"/\"\n                  render={() => <h2>Welcome to StarDB</h2>}\n                  exact />\n                <Route path=\"/people/:id?\" component={PeoplePage} />\n                <Route path=\"/planets\" component={PlanetsPage} />\n                <Route path=\"/starships\" exact component={StarshipsPage} />\n                <Route path=\"/starships/:id\"\n                  render={({ match }) => {\n                    const { id } = match.params;\n                    return <StarshipDetails itemId={id} />\n                  }} />\n\n                <Route\n                  path=\"/login\"\n                  render={() => (\n                    <LoginPage\n                      isLoggedIn={isLoggedIn}\n                      onLogin={this.onLogin} />\n                  )} />\n\n                <Route\n                  path=\"/secret\"\n                  render={() => (\n                    <SecretPage isLoggedIn={isLoggedIn} />\n                  )} />\n\n                <Route render={() => <h2>Page not found</h2>} />\n              </Routes>\n\n            </div>\n          </Router>\n        </SwapiServiceProvider>\n      </ErrorBoundry>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}