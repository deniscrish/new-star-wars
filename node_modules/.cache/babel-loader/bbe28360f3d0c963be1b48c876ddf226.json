{"ast":null,"code":"var _jsxFileName = \"/Users/deniscrish/Documents/react-apps/star-db/src/components/sw-components/details.js\";\nimport React from 'react';\nimport ItemDetails, { Record } from '../item-details';\nimport SwapiService from '../../services/swapi-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst swapiService = new SwapiService();\nconst {\n  getPerson,\n  getPlanet,\n  getStarship,\n  getPersonImage,\n  getPlanetImage,\n  getStarshipImage\n} = swapiService;\n\nconst PersonDetails = _ref => {\n  let {\n    itemId\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(ItemDetails, {\n    itemId: itemId,\n    getData: getPerson,\n    getImageUrl: getPersonImage,\n    children: [/*#__PURE__*/_jsxDEV(Record, {\n      field: \"gender\",\n      label: \"Gender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Record, {\n      field: \"eyeColor\",\n      label: \"Eye Color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PersonDetails;\n\nconst PlanetDetails = _ref2 => {\n  let {\n    itemId\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(ItemDetails, {\n    itemId: itemId,\n    getData: getPlanet,\n    getImageUrl: getPlanetImage,\n    children: [/*#__PURE__*/_jsxDEV(Record, {\n      field: \"population\",\n      label: \"Population\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Record, {\n      field: \"rotationPeriod\",\n      label: \"Rotation Period\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Record, {\n      field: \"diameter\",\n      label: \"Diameter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = PlanetDetails;\n\nconst StarshipDetails = _ref3 => {\n  let {\n    itemId\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(ItemDetails, {\n    itemId: itemId,\n    getData: getStarship,\n    getImageUrl: getStarshipImage,\n    children: [/*#__PURE__*/_jsxDEV(Record, {\n      field: \"model\",\n      label: \"Model\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Record, {\n      field: \"length\",\n      label: \"Length\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Record, {\n      field: \"costInCredits\",\n      label: \"Cost\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = StarshipDetails;\nexport { PersonDetails, PlanetDetails, StarshipDetails };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PersonDetails\");\n$RefreshReg$(_c2, \"PlanetDetails\");\n$RefreshReg$(_c3, \"StarshipDetails\");","map":{"version":3,"sources":["/Users/deniscrish/Documents/react-apps/star-db/src/components/sw-components/details.js"],"names":["React","ItemDetails","Record","SwapiService","swapiService","getPerson","getPlanet","getStarship","getPersonImage","getPlanetImage","getStarshipImage","PersonDetails","itemId","PlanetDetails","StarshipDetails"],"mappings":";AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,IAAsBC,MAAtB,QAAoC,iBAApC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,MAAMC,YAAY,GAAG,IAAID,YAAJ,EAArB;AAEA,MAAM;AACJE,EAAAA,SADI;AAEJC,EAAAA,SAFI;AAGJC,EAAAA,WAHI;AAIJC,EAAAA,cAJI;AAKJC,EAAAA,cALI;AAMJC,EAAAA;AANI,IAOFN,YAPJ;;AASA,MAAMO,aAAa,GAAG,QAAgB;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AAEpC,sBACE,QAAC,WAAD;AACE,IAAA,MAAM,EAAEA,MADV;AAEE,IAAA,OAAO,EAAEP,SAFX;AAGE,IAAA,WAAW,EAAEG,cAHf;AAAA,4BAKE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,KAAK,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAyB,MAAA,KAAK,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAZD;;KAAMG,a;;AAcN,MAAME,aAAa,GAAG,SAAgB;AAAA,MAAf;AAAED,IAAAA;AAAF,GAAe;AACpC,sBACE,QAAC,WAAD;AACE,IAAA,MAAM,EAAEA,MADV;AAEE,IAAA,OAAO,EAAEN,SAFX;AAGE,IAAA,WAAW,EAAEG,cAHf;AAAA,4BAKE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,YAAd;AAA2B,MAAA,KAAK,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,gBAAd;AAA+B,MAAA,KAAK,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAyB,MAAA,KAAK,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAZD;;MAAMI,a;;AAcN,MAAMC,eAAe,GAAG,SAAgB;AAAA,MAAf;AAAEF,IAAAA;AAAF,GAAe;AACtC,sBACE,QAAC,WAAD;AACE,IAAA,MAAM,EAAEA,MADV;AAEE,IAAA,OAAO,EAAEL,WAFX;AAGE,IAAA,WAAW,EAAEG,gBAHf;AAAA,4BAKE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,KAAK,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,KAAK,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,eAAd;AAA8B,MAAA,KAAK,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAZD;;MAAMI,e;AAcN,SACEH,aADF,EAEEE,aAFF,EAGEC,eAHF","sourcesContent":["\n   \nimport React from 'react';\n\nimport ItemDetails, { Record } from '../item-details';\nimport SwapiService from '../../services/swapi-service';\n\nconst swapiService = new SwapiService();\n\nconst {\n  getPerson,\n  getPlanet,\n  getStarship,\n  getPersonImage,\n  getPlanetImage,\n  getStarshipImage\n} = swapiService;\n\nconst PersonDetails = ({ itemId }) => {\n\n  return (\n    <ItemDetails\n      itemId={itemId}\n      getData={getPerson}\n      getImageUrl={getPersonImage} >\n\n      <Record field=\"gender\" label=\"Gender\" />\n      <Record field=\"eyeColor\" label=\"Eye Color\" />\n    </ItemDetails>\n  );\n};\n\nconst PlanetDetails = ({ itemId }) => {\n  return (\n    <ItemDetails\n      itemId={itemId}\n      getData={getPlanet}\n      getImageUrl={getPlanetImage}>\n\n      <Record field=\"population\" label=\"Population\" />\n      <Record field=\"rotationPeriod\" label=\"Rotation Period\" />\n      <Record field=\"diameter\" label=\"Diameter\" />\n    </ItemDetails>\n  );\n};\n\nconst StarshipDetails = ({ itemId }) => {\n  return (\n    <ItemDetails\n      itemId={itemId}\n      getData={getStarship}\n      getImageUrl={getStarshipImage}>\n\n      <Record field=\"model\" label=\"Model\" />\n      <Record field=\"length\" label=\"Length\" />\n      <Record field=\"costInCredits\" label=\"Cost\" />\n    </ItemDetails>\n  );\n};\n\nexport {\n  PersonDetails,\n  PlanetDetails,\n  StarshipDetails\n};"]},"metadata":{},"sourceType":"module"}